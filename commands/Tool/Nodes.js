const { EmbedBuilder } = require("discord.js")
const prettyBytes = require("pretty-bytes");
const moment = require("moment");
const errorReply = new EmbedBuilder();
require("moment-duration-format");

    /**
     * 
     * @param {import("discord.js").Client} client 
     * @param {import("discord.js").Interaction} interaction
     */

     module.exports = {
        data: {
            name: "‡πÇ‡∏´‡∏ô‡∏î",
            description: "‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Node-Lavalink",
        }, 

        run: async (client, interaction) => {

            try {

                const RTA_Node = client.manager.nodes.map((node) => {
                    return {
                                name: `${node.connected ? "üü¢" : "üî¥"} ${node.options.identifier}`,
                                value: `\`\`\`css\n‡∏Å‡∏≤‡∏£‡∏ó‡πç‡∏≤‡∏á‡∏≤‡∏ô‡∏ã‡∏µ‡∏û‡∏µ‡∏¢‡∏π: ${(Math.round(node.stats.cpu.systemLoad * 100) / 100).toFixed(2)}%\n‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: ${node.stats.players} ‡∏´‡πâ‡∏≠‡∏á\n‡∏Å‡πç‡∏≤‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô: ${node.stats.playingPlayers} ‡∏´‡πâ‡∏≠‡∏á\n‡πÄ‡πÄ‡∏£‡∏°‡∏Å‡πç‡∏≤‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: ${prettyBytes(node.stats.memory.used)}\n‡πÄ‡πÄ‡∏£‡∏°‡∏•‡∏¥‡∏°‡∏¥‡∏ï: ${prettyBytes(node.stats.memory.reservable)}\nUptime: ${moment.duration(node.stats.uptime).format(" d[d] h[h] m[m] ")}\`\`\``,
                                inline: true,
                            }
                        })
                        
                        await interaction.reply({
                embeds: [new EmbedBuilder()
                .setAuthor({ name: `${client.user.username}`, iconURL: client.user.displayAvatarURL() })
                .setDescription('**__Node Lavalink Status__**')
                .setColor('White')
                .addFields(RTA_Node)
                ]
            })

        } catch (e) {
            client.logger.danger(e)
            console.log(e)
        }

    }, catch (e) {
        client.logger.danger(e)
        errorReply.setColor('Red').setDescription('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡πç‡∏≤‡∏™‡∏±‡πà‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡πç‡∏≤‡∏™‡∏±‡πà‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        return interaction.reply({ embeds: [errorReply],  ephemeral: true });
    }
}
